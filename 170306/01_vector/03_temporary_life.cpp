#include <string>

using std::string;

int main() {
  // Временный `string`, который создан оператором `+`, доживает до ближайшей
  // точки с запятой. Поэтому у него можно спокойно взять `c_str()`
  // (это в некотором смысле указатель на внутренний буфер) и не бояться,
  // что он умрёт до того, как `printf` отработает.
  printf("%s\n", (string("a") + string("b")).c_str());

  // А вот так делать уже нельзя: `x` будет корректен, но после точки с
  // запятой временный объект умрёт и `x` станет указывать непонятно куда.
  const char* x = (string("a") + string("b")).c_str();
  // Может повезти, и `printf` отработает, но это undefined behavior.
  // printf("%s\n", x);
  return 0;
}